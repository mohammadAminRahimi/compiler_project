
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftlow4leftlow3leftlow2leftlow1leftlowleftUNMATCHEDMATCHEDleftELSEIFELSEleftneeqleftgtgeleftleltleftsubsumleftmudimolefthighleftvhighAND ASSIGN BOOLEAN COLON COMMA DIV ELSE ELSEIF EQ ERROR FALSE FLOAT FLOATNUMBER FOR FUNCTION GE GT ID IF IN INTEGER INTEGERNUMBER LCB LE LRB LSB LT MAIN MOD MUL NE NOT ON OR PRINT RCB RETURN RRB RSB SEMICOLON SUB SUM TRUE WHERE WHILEprogram : declist MAIN LRB RRB block \n            | MAIN LRB RRB block empty : \n        declist : dec \n        | declist dec \n        dec : vardec \n        | funcdec type : INTEGER \n        | FLOAT \n        | BOOLEANiddec : ID \n        | ID LSB exp RSB \n        | ID ASSIGN expidlist : iddec \n        | idlist COMMA iddecvardec : idlist COLON type SEMICOLONfuncdec : FUNCTION ID LRB paramdecs RRB COLON type block \n        | FUNCTION ID  LRB paramdecs RRB blockparamdecs : paramdecslist \n        | emptyparamdecslist : paramdec\n        | paramdecslist COMMA paramdecparamdec : ID COLON type\n        | ID LSB RSB COLON typelvalue : ID LSB exp RSBconst :  INTEGERNUMBER\n        | FLOATNUMBER\n        | TRUE\n        | FALSE\n        exp : LRB exp RRB %prec vhigh\n        | const %prec vhigh\n        | ID LRB RRB %prec vhigh\n        | ID LRB explist RRB %prec vhigh\n        | lvalue %prec vhigh \n        | SUB exp %prec high\n        | exp SUM exp %prec sum\n        | exp SUB exp %prec sub\n        | exp MUL exp %prec mu\n        | exp DIV exp %prec di\n        | exp MOD exp %prec mo\n        | exp GE exp %prec ge\n        | exp GT exp %prec gt\n        | exp LE exp %prec le\n        | exp LT exp %prec lt\n        | exp EQ exp %prec eq\n        | exp NE exp %prec ne\n        | exp OR exp %prec low\n        | exp AND exp %prec low1\n        | NOT exp %prec low2\n        | lvalue ASSIGN exp %prec low3\n        | ID ASSIGN exp %prec low4\n        | ID\n        explist : exp\n        | explist COMMA exp\n        block : LCB stmtlist RCB\n        | LCB RCB\n        stmtlist : stmt \n        | stmtlist stmt \n        cases : case \n        | cases case \n        case : WHERE const COLON stmtliststmt : matched %prec MATCHED\n        | unmatched unmatched : IF LRB exp RRB stmt elseiflist %prec UNMATCHED\n        | IF LRB exp RRB matched elseiflist ELSE unmatched %prec ELSE\n        | IF LRB exp RRB matched ELSE unmatched %prec ELSE\n        | IF LRB exp RRB stmt %prec UNMATCHED\n        matched : RETURN exp SEMICOLON\n        | exp SEMICOLON\n        | block\n        | WHILE LRB exp RRB stmt\n        | ON LRB exp RRB LCB cases RCB SEMICOLON\n        | ON LRB exp RRB LCB RCB SEMICOLON\n        | FOR LRB exp SEMICOLON exp SEMICOLON exp RRB stmt\n        | FOR LRB ID IN ID RRB stmt \n        | PRINT LRB ID RRB SEMICOLON \n        | IF LRB exp RRB matched elseiflist ELSE matched  \n        | IF LRB exp RRB matched ELSE matched  \n        | vardec\n        \n        elseiflist : ELSEIF LRB exp RRB matched  \n        | elseiflist ELSEIF LRB exp RRB matched    \n        '
    
_lr_action_items = {'MAIN':([0,2,4,5,6,12,42,71,109,123,148,],[3,11,-4,-6,-7,-5,-16,-56,-55,-18,-17,]),'FUNCTION':([0,2,4,5,6,12,42,71,109,123,148,],[8,8,-4,-6,-7,-5,-16,-56,-55,-18,-17,]),'ID':([0,2,4,5,6,8,12,15,17,18,26,29,32,33,41,42,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,66,70,71,72,73,74,75,77,84,88,109,110,112,113,114,115,116,117,118,119,123,126,128,140,142,143,146,148,149,153,154,155,160,161,163,165,168,171,172,174,175,176,177,178,179,180,181,182,184,185,187,188,189,191,192,194,197,198,],[9,9,-4,-6,-7,16,-5,9,27,27,43,27,27,27,81,-16,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,81,-56,-57,-62,-63,27,-70,-79,43,-55,-58,-69,27,27,132,27,27,135,27,-18,27,-68,81,27,152,81,-17,-71,-76,-62,-67,27,81,81,-64,-73,-75,81,-78,-66,27,-72,81,81,-77,-65,27,81,-74,81,81,-80,-81,27,81,81,81,]),'$end':([1,40,69,71,109,],[0,-2,-1,-56,-55,]),'LRB':([3,11,16,17,18,27,29,32,33,41,42,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,66,70,71,72,73,74,75,77,78,79,80,81,82,83,84,109,110,112,113,114,115,116,117,119,126,128,132,140,142,146,149,153,154,155,160,161,163,164,165,168,171,172,173,174,175,176,177,178,179,180,181,182,184,185,187,188,189,190,191,192,194,197,198,],[13,19,26,29,29,48,29,29,29,29,-16,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-56,-57,-62,-63,29,-70,113,114,115,48,118,119,-79,-55,-58,-69,29,29,29,29,29,29,29,-68,48,29,29,29,-71,-76,-62,-67,29,29,29,176,-64,-73,-75,29,182,-78,-66,29,-72,29,29,-77,-65,29,29,-74,29,29,-80,192,-81,29,29,29,29,]),'COLON':([7,9,10,25,27,30,31,34,35,36,37,38,43,51,67,68,81,87,89,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,121,125,127,133,144,169,],[14,-11,-14,-15,-52,-31,-34,-26,-27,-28,-29,-13,85,-12,-35,-49,-11,122,-32,-51,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-30,-50,137,-33,-25,-13,-12,178,]),'COMMA':([7,9,10,22,23,24,25,27,30,31,34,35,36,37,38,45,47,51,67,68,81,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,120,124,125,127,133,139,144,147,],[15,-11,-14,-8,-9,-10,-15,-52,-31,-34,-26,-27,-28,-29,-13,88,-21,-12,-35,-49,-11,-32,126,-53,-51,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-30,-50,-23,-22,-33,-25,-13,-54,-12,-24,]),'LSB':([9,27,43,81,132,],[17,50,86,117,50,]),'ASSIGN':([9,27,31,81,127,132,144,],[18,49,66,116,-25,49,-25,]),'RRB':([13,19,22,23,24,26,27,30,31,34,35,36,37,44,45,46,47,48,65,67,68,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,120,124,125,127,129,130,135,136,139,147,152,170,183,186,193,],[20,39,-8,-9,-10,-3,-52,-31,-34,-26,-27,-28,-29,87,-19,-20,-21,89,107,-35,-49,-32,125,-53,-51,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-30,-50,-23,-22,-33,-25,140,141,145,146,-54,-24,161,179,187,188,194,]),'INTEGER':([14,85,122,137,],[22,22,22,22,]),'FLOAT':([14,85,122,137,],[23,23,23,23,]),'BOOLEAN':([14,85,122,137,],[24,24,24,24,]),'SUB':([17,18,27,28,29,30,31,32,33,34,35,36,37,38,41,42,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,81,84,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,125,126,127,128,129,130,131,132,133,134,136,139,140,142,144,146,149,151,153,154,155,160,161,163,165,168,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,191,192,193,194,197,198,],[32,32,-52,53,32,-31,-34,32,32,-26,-27,-28,-29,53,32,-16,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,53,32,-35,-49,32,-56,-57,-62,-63,32,53,-70,-52,-79,-32,53,-51,53,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-30,-50,-55,-58,53,-69,32,32,32,32,32,32,-33,32,-25,-68,53,53,53,-52,-51,53,53,53,32,32,-25,32,-71,53,-76,-62,-67,32,32,32,-64,-73,53,-75,32,-78,-66,32,-72,32,32,-77,-65,32,53,32,-74,53,32,32,-80,-81,32,53,32,32,32,]),'NOT':([17,18,29,32,33,41,42,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,66,70,71,72,73,74,75,77,84,109,110,112,113,114,115,116,117,119,126,128,140,142,146,149,153,154,155,160,161,163,165,168,171,172,174,175,176,177,178,179,180,181,182,184,185,187,188,189,191,192,194,197,198,],[33,33,33,33,33,33,-16,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-56,-57,-62,-63,33,-70,-79,-55,-58,-69,33,33,33,33,33,33,33,-68,33,33,33,-71,-76,-62,-67,33,33,33,-64,-73,-75,33,-78,-66,33,-72,33,33,-77,-65,33,33,-74,33,33,-80,-81,33,33,33,33,]),'INTEGERNUMBER':([17,18,29,32,33,41,42,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,66,70,71,72,73,74,75,77,84,109,110,112,113,114,115,116,117,119,126,128,140,142,146,149,153,154,155,159,160,161,163,165,168,171,172,174,175,176,177,178,179,180,181,182,184,185,187,188,189,191,192,194,197,198,],[34,34,34,34,34,34,-16,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-56,-57,-62,-63,34,-70,-79,-55,-58,-69,34,34,34,34,34,34,34,-68,34,34,34,-71,-76,-62,-67,34,34,34,34,-64,-73,-75,34,-78,-66,34,-72,34,34,-77,-65,34,34,-74,34,34,-80,-81,34,34,34,34,]),'FLOATNUMBER':([17,18,29,32,33,41,42,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,66,70,71,72,73,74,75,77,84,109,110,112,113,114,115,116,117,119,126,128,140,142,146,149,153,154,155,159,160,161,163,165,168,171,172,174,175,176,177,178,179,180,181,182,184,185,187,188,189,191,192,194,197,198,],[35,35,35,35,35,35,-16,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-56,-57,-62,-63,35,-70,-79,-55,-58,-69,35,35,35,35,35,35,35,-68,35,35,35,-71,-76,-62,-67,35,35,35,35,-64,-73,-75,35,-78,-66,35,-72,35,35,-77,-65,35,35,-74,35,35,-80,-81,35,35,35,35,]),'TRUE':([17,18,29,32,33,41,42,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,66,70,71,72,73,74,75,77,84,109,110,112,113,114,115,116,117,119,126,128,140,142,146,149,153,154,155,159,160,161,163,165,168,171,172,174,175,176,177,178,179,180,181,182,184,185,187,188,189,191,192,194,197,198,],[36,36,36,36,36,36,-16,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-56,-57,-62,-63,36,-70,-79,-55,-58,-69,36,36,36,36,36,36,36,-68,36,36,36,-71,-76,-62,-67,36,36,36,36,-64,-73,-75,36,-78,-66,36,-72,36,36,-77,-65,36,36,-74,36,36,-80,-81,36,36,36,36,]),'FALSE':([17,18,29,32,33,41,42,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,66,70,71,72,73,74,75,77,84,109,110,112,113,114,115,116,117,119,126,128,140,142,146,149,153,154,155,159,160,161,163,165,168,171,172,174,175,176,177,178,179,180,181,182,184,185,187,188,189,191,192,194,197,198,],[37,37,37,37,37,37,-16,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-56,-57,-62,-63,37,-70,-79,-55,-58,-69,37,37,37,37,37,37,37,-68,37,37,37,-71,-76,-62,-67,37,37,37,37,-64,-73,-75,37,-78,-66,37,-72,37,37,-77,-65,37,37,-74,37,37,-80,-81,37,37,37,37,]),'LCB':([20,22,23,24,39,41,42,70,71,72,73,74,77,84,87,109,110,112,128,138,140,141,146,149,153,154,155,161,163,165,168,171,172,174,175,177,178,179,180,181,184,185,187,188,189,191,194,197,198,],[41,-8,-9,-10,41,41,-16,41,-56,-57,-62,-63,-70,-79,41,-55,-58,-69,-68,41,41,150,41,-71,-76,-62,-67,41,41,-64,-73,-75,41,-78,-66,-72,41,41,-77,-65,41,-74,41,41,-80,-81,41,41,41,]),'SEMICOLON':([21,22,23,24,27,30,31,34,35,36,37,67,68,76,81,89,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,125,127,131,132,133,144,145,151,157,166,],[42,-8,-9,-10,-52,-31,-34,-26,-27,-28,-29,-35,-49,112,-52,-32,-51,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-30,-50,128,-33,-25,142,-52,-51,-25,153,160,168,177,]),'RSB':([27,28,30,31,34,35,36,37,67,68,86,89,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,125,127,134,],[-52,51,-31,-34,-26,-27,-28,-29,-35,-49,121,-32,-51,127,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-30,-50,-33,-25,144,]),'SUM':([27,28,30,31,34,35,36,37,38,65,67,68,76,81,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,125,127,129,130,131,132,133,134,136,139,144,151,170,183,186,193,],[-52,52,-31,-34,-26,-27,-28,-29,52,52,-35,-49,52,-52,-32,52,-51,52,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-30,-50,52,-33,-25,52,52,52,-52,-51,52,52,52,-25,52,52,52,52,52,]),'MUL':([27,28,30,31,34,35,36,37,38,65,67,68,76,81,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,125,127,129,130,131,132,133,134,136,139,144,151,170,183,186,193,],[-52,54,-31,-34,-26,-27,-28,-29,54,54,-35,-49,54,-52,-32,54,-51,54,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-30,-50,54,-33,-25,54,54,54,-52,-51,54,54,54,-25,54,54,54,54,54,]),'DIV':([27,28,30,31,34,35,36,37,38,65,67,68,76,81,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,125,127,129,130,131,132,133,134,136,139,144,151,170,183,186,193,],[-52,55,-31,-34,-26,-27,-28,-29,55,55,-35,-49,55,-52,-32,55,-51,55,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-30,-50,55,-33,-25,55,55,55,-52,-51,55,55,55,-25,55,55,55,55,55,]),'MOD':([27,28,30,31,34,35,36,37,38,65,67,68,76,81,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,125,127,129,130,131,132,133,134,136,139,144,151,170,183,186,193,],[-52,56,-31,-34,-26,-27,-28,-29,56,56,-35,-49,56,-52,-32,56,-51,56,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-30,-50,56,-33,-25,56,56,56,-52,-51,56,56,56,-25,56,56,56,56,56,]),'GE':([27,28,30,31,34,35,36,37,38,65,67,68,76,81,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,125,127,129,130,131,132,133,134,136,139,144,151,170,183,186,193,],[-52,57,-31,-34,-26,-27,-28,-29,57,57,-35,-49,57,-52,-32,57,-51,57,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-30,-50,57,-33,-25,57,57,57,-52,-51,57,57,57,-25,57,57,57,57,57,]),'GT':([27,28,30,31,34,35,36,37,38,65,67,68,76,81,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,125,127,129,130,131,132,133,134,136,139,144,151,170,183,186,193,],[-52,58,-31,-34,-26,-27,-28,-29,58,58,-35,-49,58,-52,-32,58,-51,58,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-30,-50,58,-33,-25,58,58,58,-52,-51,58,58,58,-25,58,58,58,58,58,]),'LE':([27,28,30,31,34,35,36,37,38,65,67,68,76,81,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,125,127,129,130,131,132,133,134,136,139,144,151,170,183,186,193,],[-52,59,-31,-34,-26,-27,-28,-29,59,59,-35,-49,59,-52,-32,59,-51,59,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-30,-50,59,-33,-25,59,59,59,-52,-51,59,59,59,-25,59,59,59,59,59,]),'LT':([27,28,30,31,34,35,36,37,38,65,67,68,76,81,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,125,127,129,130,131,132,133,134,136,139,144,151,170,183,186,193,],[-52,60,-31,-34,-26,-27,-28,-29,60,60,-35,-49,60,-52,-32,60,-51,60,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-30,-50,60,-33,-25,60,60,60,-52,-51,60,60,60,-25,60,60,60,60,60,]),'EQ':([27,28,30,31,34,35,36,37,38,65,67,68,76,81,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,125,127,129,130,131,132,133,134,136,139,144,151,170,183,186,193,],[-52,61,-31,-34,-26,-27,-28,-29,61,61,-35,-49,61,-52,-32,61,-51,61,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-30,-50,61,-33,-25,61,61,61,-52,-51,61,61,61,-25,61,61,61,61,61,]),'NE':([27,28,30,31,34,35,36,37,38,65,67,68,76,81,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,125,127,129,130,131,132,133,134,136,139,144,151,170,183,186,193,],[-52,62,-31,-34,-26,-27,-28,-29,62,62,-35,-49,62,-52,-32,62,-51,62,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-30,-50,62,-33,-25,62,62,62,-52,-51,62,62,62,-25,62,62,62,62,62,]),'OR':([27,28,30,31,34,35,36,37,38,65,67,68,76,81,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,125,127,129,130,131,132,133,134,136,139,144,151,170,183,186,193,],[-52,63,-31,-34,-26,-27,-28,-29,63,63,-35,-49,63,-52,-32,63,-51,63,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-30,-50,63,-33,-25,63,63,63,-52,-51,63,63,63,-25,63,63,63,63,63,]),'AND':([27,28,30,31,34,35,36,37,38,65,67,68,76,81,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,111,125,127,129,130,131,132,133,134,136,139,144,151,170,183,186,193,],[-52,64,-31,-34,-26,-27,-28,-29,64,64,-35,-49,64,-52,-32,64,-51,64,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-30,-50,64,-33,-25,64,64,64,-52,-51,64,64,64,-25,64,64,64,64,64,]),'RCB':([41,42,70,71,72,73,74,77,84,109,110,112,128,149,150,153,154,155,156,158,165,167,168,171,174,175,177,180,181,184,185,189,191,],[71,-16,109,-56,-57,-62,-63,-70,-79,-55,-58,-69,-68,-71,157,-76,-62,-67,166,-59,-64,-60,-73,-75,-78,-66,-72,-77,-65,-61,-74,-80,-81,]),'RETURN':([41,42,70,71,72,73,74,77,84,109,110,112,128,140,146,149,153,154,155,161,163,165,168,171,172,174,175,177,178,179,180,181,184,185,187,188,189,191,194,197,198,],[75,-16,75,-56,-57,-62,-63,-70,-79,-55,-58,-69,-68,75,75,-71,-76,-62,-67,75,75,-64,-73,-75,75,-78,-66,-72,75,75,-77,-65,75,-74,75,75,-80,-81,75,75,75,]),'WHILE':([41,42,70,71,72,73,74,77,84,109,110,112,128,140,146,149,153,154,155,161,163,165,168,171,172,174,175,177,178,179,180,181,184,185,187,188,189,191,194,197,198,],[78,-16,78,-56,-57,-62,-63,-70,-79,-55,-58,-69,-68,78,78,-71,-76,-62,-67,78,78,-64,-73,-75,78,-78,-66,-72,78,78,-77,-65,78,-74,78,78,-80,-81,78,78,78,]),'ON':([41,42,70,71,72,73,74,77,84,109,110,112,128,140,146,149,153,154,155,161,163,165,168,171,172,174,175,177,178,179,180,181,184,185,187,188,189,191,194,197,198,],[79,-16,79,-56,-57,-62,-63,-70,-79,-55,-58,-69,-68,79,79,-71,-76,-62,-67,79,79,-64,-73,-75,79,-78,-66,-72,79,79,-77,-65,79,-74,79,79,-80,-81,79,79,79,]),'FOR':([41,42,70,71,72,73,74,77,84,109,110,112,128,140,146,149,153,154,155,161,163,165,168,171,172,174,175,177,178,179,180,181,184,185,187,188,189,191,194,197,198,],[80,-16,80,-56,-57,-62,-63,-70,-79,-55,-58,-69,-68,80,80,-71,-76,-62,-67,80,80,-64,-73,-75,80,-78,-66,-72,80,80,-77,-65,80,-74,80,80,-80,-81,80,80,80,]),'PRINT':([41,42,70,71,72,73,74,77,84,109,110,112,128,140,146,149,153,154,155,161,163,165,168,171,172,174,175,177,178,179,180,181,184,185,187,188,189,191,194,197,198,],[82,-16,82,-56,-57,-62,-63,-70,-79,-55,-58,-69,-68,82,82,-71,-76,-62,-67,82,82,-64,-73,-75,82,-78,-66,-72,82,82,-77,-65,82,-74,82,82,-80,-81,82,82,82,]),'IF':([41,42,70,71,72,73,74,77,84,109,110,112,128,140,146,149,153,154,155,161,163,165,168,171,172,174,175,177,178,179,180,181,184,185,187,188,189,191,194,197,198,],[83,-16,83,-56,-57,-62,-63,-70,-79,-55,-58,-69,-68,83,83,-71,-76,-62,-67,83,83,-64,-73,-75,83,-78,-66,-72,83,83,-77,-65,83,-74,190,190,-80,-81,190,190,190,]),'ELSE':([42,71,73,74,77,84,109,112,128,149,153,154,155,162,165,168,171,174,175,177,180,181,185,189,191,195,196,],[-16,-56,-62,-63,-70,-79,-55,-69,-68,-71,-76,163,-67,172,-64,-73,-75,-78,-66,-72,-77,-65,-74,-80,-81,197,198,]),'ELSEIF':([42,71,73,74,77,84,109,112,128,149,153,154,155,162,165,168,171,174,175,177,180,181,185,189,191,195,196,],[-16,-56,-62,-63,-70,-79,-55,-69,-68,-71,-76,164,164,173,173,-73,-75,-78,-66,-72,-77,-65,-74,-80,-81,164,173,]),'WHERE':([42,71,72,73,74,77,84,109,110,112,128,149,150,153,154,155,156,158,165,167,168,171,174,175,177,180,181,184,185,189,191,],[-16,-56,-57,-62,-63,-70,-79,-55,-58,-69,-68,-71,159,-76,-62,-67,159,-59,-64,-60,-73,-75,-78,-66,-72,-77,-65,-61,-74,-80,-81,]),'IN':([132,],[143,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declist':([0,],[2,]),'dec':([0,2,],[4,12,]),'vardec':([0,2,41,70,140,146,161,163,172,178,179,184,187,188,194,197,198,],[5,5,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'funcdec':([0,2,],[6,6,]),'idlist':([0,2,41,70,140,146,161,163,172,178,179,184,187,188,194,197,198,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'iddec':([0,2,15,41,70,140,146,161,163,172,178,179,184,187,188,194,197,198,],[10,10,25,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'type':([14,85,122,137,],[21,120,138,147,]),'exp':([17,18,29,32,33,41,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,66,70,75,113,114,115,116,117,119,126,140,142,146,160,161,163,172,176,178,179,182,184,187,188,192,194,197,198,],[28,38,65,67,68,76,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,76,111,129,130,131,133,134,136,139,76,151,76,170,76,76,76,183,76,76,186,76,76,76,193,76,76,76,]),'const':([17,18,29,32,33,41,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,66,70,75,113,114,115,116,117,119,126,140,142,146,159,160,161,163,172,176,178,179,182,184,187,188,192,194,197,198,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,169,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'lvalue':([17,18,29,32,33,41,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,66,70,75,113,114,115,116,117,119,126,140,142,146,160,161,163,172,176,178,179,182,184,187,188,192,194,197,198,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'block':([20,39,41,70,87,138,140,146,161,163,172,178,179,184,187,188,194,197,198,],[40,69,77,77,123,148,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'paramdecs':([26,],[44,]),'paramdecslist':([26,],[45,]),'empty':([26,],[46,]),'paramdec':([26,88,],[47,124,]),'stmtlist':([41,178,],[70,184,]),'stmt':([41,70,140,146,161,178,179,184,],[72,110,149,155,171,72,185,110,]),'matched':([41,70,140,146,161,163,172,178,179,184,187,188,194,197,198,],[73,73,73,154,73,174,180,73,73,73,189,191,195,174,180,]),'unmatched':([41,70,140,146,161,163,172,178,179,184,],[74,74,74,74,74,175,181,74,74,74,]),'explist':([48,],[90,]),'cases':([150,],[156,]),'case':([150,156,],[158,167,]),'elseiflist':([154,155,195,],[162,165,196,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declist MAIN LRB RRB block','program',5,'p_program','parser.py',16),
  ('program -> MAIN LRB RRB block','program',4,'p_program','parser.py',17),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',26),
  ('declist -> dec','declist',1,'p_declist_to_dec','parser.py',33),
  ('declist -> declist dec','declist',2,'p_declist_to_dec','parser.py',34),
  ('dec -> vardec','dec',1,'p_dec_to_var_or_func','parser.py',44),
  ('dec -> funcdec','dec',1,'p_dec_to_var_or_func','parser.py',45),
  ('type -> INTEGER','type',1,'p_type_to_type','parser.py',50),
  ('type -> FLOAT','type',1,'p_type_to_type','parser.py',51),
  ('type -> BOOLEAN','type',1,'p_type_to_type','parser.py',52),
  ('iddec -> ID','iddec',1,'p_iddec_to_id','parser.py',62),
  ('iddec -> ID LSB exp RSB','iddec',4,'p_iddec_to_id','parser.py',63),
  ('iddec -> ID ASSIGN exp','iddec',3,'p_iddec_to_id','parser.py',64),
  ('idlist -> iddec','idlist',1,'p_idlist_to_iddec','parser.py',74),
  ('idlist -> idlist COMMA iddec','idlist',3,'p_idlist_to_iddec','parser.py',75),
  ('vardec -> idlist COLON type SEMICOLON','vardec',4,'p_vardec_to_idlist_and_tyep','parser.py',83),
  ('funcdec -> FUNCTION ID LRB paramdecs RRB COLON type block','funcdec',8,'p_funcdec_to_dec','parser.py',88),
  ('funcdec -> FUNCTION ID LRB paramdecs RRB block','funcdec',6,'p_funcdec_to_dec','parser.py',89),
  ('paramdecs -> paramdecslist','paramdecs',1,'p_paramdecs_to_paramdecslist','parser.py',97),
  ('paramdecs -> empty','paramdecs',1,'p_paramdecs_to_paramdecslist','parser.py',98),
  ('paramdecslist -> paramdec','paramdecslist',1,'p_paramdecslist_to_paramdec','parser.py',103),
  ('paramdecslist -> paramdecslist COMMA paramdec','paramdecslist',3,'p_paramdecslist_to_paramdec','parser.py',104),
  ('paramdec -> ID COLON type','paramdec',3,'p_paramdec_to_id','parser.py',112),
  ('paramdec -> ID LSB RSB COLON type','paramdec',5,'p_paramdec_to_id','parser.py',113),
  ('lvalue -> ID LSB exp RSB','lvalue',4,'p_lvalue','parser.py',122),
  ('const -> INTEGERNUMBER','const',1,'p_const','parser.py',130),
  ('const -> FLOATNUMBER','const',1,'p_const','parser.py',131),
  ('const -> TRUE','const',1,'p_const','parser.py',132),
  ('const -> FALSE','const',1,'p_const','parser.py',133),
  ('exp -> LRB exp RRB','exp',3,'p_exp','parser.py',150),
  ('exp -> const','exp',1,'p_exp','parser.py',151),
  ('exp -> ID LRB RRB','exp',3,'p_exp','parser.py',152),
  ('exp -> ID LRB explist RRB','exp',4,'p_exp','parser.py',153),
  ('exp -> lvalue','exp',1,'p_exp','parser.py',154),
  ('exp -> SUB exp','exp',2,'p_exp','parser.py',155),
  ('exp -> exp SUM exp','exp',3,'p_exp','parser.py',156),
  ('exp -> exp SUB exp','exp',3,'p_exp','parser.py',157),
  ('exp -> exp MUL exp','exp',3,'p_exp','parser.py',158),
  ('exp -> exp DIV exp','exp',3,'p_exp','parser.py',159),
  ('exp -> exp MOD exp','exp',3,'p_exp','parser.py',160),
  ('exp -> exp GE exp','exp',3,'p_exp','parser.py',161),
  ('exp -> exp GT exp','exp',3,'p_exp','parser.py',162),
  ('exp -> exp LE exp','exp',3,'p_exp','parser.py',163),
  ('exp -> exp LT exp','exp',3,'p_exp','parser.py',164),
  ('exp -> exp EQ exp','exp',3,'p_exp','parser.py',165),
  ('exp -> exp NE exp','exp',3,'p_exp','parser.py',166),
  ('exp -> exp OR exp','exp',3,'p_exp','parser.py',167),
  ('exp -> exp AND exp','exp',3,'p_exp','parser.py',168),
  ('exp -> NOT exp','exp',2,'p_exp','parser.py',169),
  ('exp -> lvalue ASSIGN exp','exp',3,'p_exp','parser.py',170),
  ('exp -> ID ASSIGN exp','exp',3,'p_exp','parser.py',171),
  ('exp -> ID','exp',1,'p_exp','parser.py',172),
  ('explist -> exp','explist',1,'p_explist','parser.py',239),
  ('explist -> explist COMMA exp','explist',3,'p_explist','parser.py',240),
  ('block -> LCB stmtlist RCB','block',3,'p_block_to_statement','parser.py',250),
  ('block -> LCB RCB','block',2,'p_block_to_statement','parser.py',251),
  ('stmtlist -> stmt','stmtlist',1,'p_stmtlist','parser.py',260),
  ('stmtlist -> stmtlist stmt','stmtlist',2,'p_stmtlist','parser.py',261),
  ('cases -> case','cases',1,'p_cases','parser.py',270),
  ('cases -> cases case','cases',2,'p_cases','parser.py',271),
  ('case -> WHERE const COLON stmtlist','case',4,'p_case','parser.py',280),
  ('stmt -> matched','stmt',1,'p_s_to_matched','parser.py',284),
  ('stmt -> unmatched','stmt',1,'p_s_to_matched','parser.py',285),
  ('unmatched -> IF LRB exp RRB stmt elseiflist','unmatched',6,'p_unmatched','parser.py',289),
  ('unmatched -> IF LRB exp RRB matched elseiflist ELSE unmatched','unmatched',8,'p_unmatched','parser.py',290),
  ('unmatched -> IF LRB exp RRB matched ELSE unmatched','unmatched',7,'p_unmatched','parser.py',291),
  ('unmatched -> IF LRB exp RRB stmt','unmatched',5,'p_unmatched','parser.py',292),
  ('matched -> RETURN exp SEMICOLON','matched',3,'p_stmt','parser.py',301),
  ('matched -> exp SEMICOLON','matched',2,'p_stmt','parser.py',302),
  ('matched -> block','matched',1,'p_stmt','parser.py',303),
  ('matched -> WHILE LRB exp RRB stmt','matched',5,'p_stmt','parser.py',304),
  ('matched -> ON LRB exp RRB LCB cases RCB SEMICOLON','matched',8,'p_stmt','parser.py',305),
  ('matched -> ON LRB exp RRB LCB RCB SEMICOLON','matched',7,'p_stmt','parser.py',306),
  ('matched -> FOR LRB exp SEMICOLON exp SEMICOLON exp RRB stmt','matched',9,'p_stmt','parser.py',307),
  ('matched -> FOR LRB ID IN ID RRB stmt','matched',7,'p_stmt','parser.py',308),
  ('matched -> PRINT LRB ID RRB SEMICOLON','matched',5,'p_stmt','parser.py',309),
  ('matched -> IF LRB exp RRB matched elseiflist ELSE matched','matched',8,'p_stmt','parser.py',310),
  ('matched -> IF LRB exp RRB matched ELSE matched','matched',7,'p_stmt','parser.py',311),
  ('matched -> vardec','matched',1,'p_stmt','parser.py',312),
  ('elseiflist -> ELSEIF LRB exp RRB matched','elseiflist',5,'p_elseiflist','parser.py',353),
  ('elseiflist -> elseiflist ELSEIF LRB exp RRB matched','elseiflist',6,'p_elseiflist','parser.py',354),
]
